datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
}
model Account {
  id                 String  @id @default(auto())  @map("_id") @db.ObjectId
  userId             String  @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  
  access_token       String?  
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  role          Role    @default(USER)
  password      String?
  image         String?
  createAt      DateTime @default(now())
  updateAt      DateTime @default(now())
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String @id  @default(auto()) @map("_id") @db.ObjectId
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
} 

enum Role {
  ADMIN @map("admin")
  USER  @map("user")
}



//thing

model Book{
    id  String @id @default(auto()) @map("_id") @db.ObjectId
    title String
    description String?
    qrcode String
    image String
    number Int
    publishDate DateTime?
    createdAt DateTime @default(now())
    authorId String @db.ObjectId
    author Author @relation (fields:[authorId], references:[id]) 
    category_Id String  @db.ObjectId
    category Category @relation (fields:[category_Id],references:[id])  
  }

model Author {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  books Book[]
}

model Category{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  category_name String
  book Book[]
}